/* various utilities used by different np-hard citizens
 */

package utils

import (
	"fmt"
	"io"
	"os"
)

func ReadPointsFromFile(file io.Reader) ([][]float64, error) {
	var x, y float64
	points := make([][]float64, 0, 100)
	for i := 0;; i++ {
		// read pairs of floats for now
		n, err := fmt.Fscanf(file, "%f %f", &x, &y)
		if err == io.EOF {
			break
		}
		if err != nil || n != 2 {
			return nil, err
		}
		// check the capacity
		if len(points) == cap(points) {
			more_points := make([][]float64, len(points), 2*cap(points))
			copy(more_points, points)
			points = more_points
		}
		points = points[:i+1]
		points[i] = []float64{x, y}
	}
	return points, nil
}

func ReadPointsFromStdin() ([][]float64, error) {
	return ReadPointsFromFile(os.Stdin)
}
